{"version":3,"sources":["Dashboard/Local/LocalLineChart.jsx","Dashboard/DashBoardCard.jsx","Dashboard/Local/LocalDashboard.jsx","Dashboard/Global/GlobalDashboard.jsx","Dashboard/MainDashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["Linecharts","props","state","Data","axios","get","then","response","stats","data","Confirmed","Active","Death","Recovered","Date","forEach","stat","push","Deaths","split","setState","labels","datasets","label","borderColor","backgroundColor","spanGaps","borderWidth","Fragment","className","height","this","options","maintainAspectRatio","responsive","Component","DashBoardCard","style","cardTitle","count","LocalDashboard","useState","dashboard","setStats","useEffect","fetch","json","success","catch","console","log","role","data-aos","data-aos-duration","update_date_time","class","aria-hidden","local_new_cases","local_total_cases","local_deaths","LocalLineChart","local_active_cases","local_total_number_of_individuals_in_hospitals","local_recovered","GlobalDashboard","last_update","currently_infected","death_cases","recovery_cases","active_cases_critical_percentage","closed_cases_death_percentage","closed_cases_recovered_percentage","MainDashboard","App","AOS","init","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"gSAqGeA,E,kDAhGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAHS,E,gEAME,IAAD,OAClBC,IAAMC,IAAN,sEACGC,MAAK,SAAAC,GACJ,IAAMC,EAAQD,EAASE,KACnBC,EAAY,GACZC,EAAS,GACTC,EAAQ,GACRC,EAAY,GACZC,EAAO,GACXN,EAAMO,SAAQ,SAAAC,GACZN,EAAUO,KAAKD,EAAKN,WACpBC,EAAOM,KAAKD,EAAKL,QACjBC,EAAMK,KAAKD,EAAKE,QAChBL,EAAUI,KAAKD,EAAKH,WACpBC,EAAKG,KAAKD,EAAKF,KAAKK,MAAM,KAAK,OAEjC,EAAKC,SAAS,CACZjB,KAAM,CACJkB,OAAQP,EACRQ,SAAU,CACR,CACEC,MAAO,YACPd,KAAMC,EACRc,YAAa,UACbC,gBAAiB,cACjBC,UAAU,EACVC,YAAa,GAEb,CACEJ,MAAO,SACPd,KAAME,EACRa,YAAa,UACbC,gBAAiB,cACjBC,UAAU,EACVC,YAAa,GAEb,CACEJ,MAAO,QACPd,KAAMG,EACRY,YAAa,UACbC,gBAAiB,cACjBC,UAAU,EACVC,YAAa,GAEb,CACEJ,MAAO,YACPd,KAAMI,EACRW,YAAa,UACbC,gBAAiB,cACjBC,UAAU,EACVC,YAAa,Y,+BAQvB,OACE,kBAAC,IAAMC,SAAP,KACA,yBAAKC,UAAU,qBACf,kBAAC,IAAD,CAAMC,OAAQ,IACdrB,KACEsB,KAAK7B,MAAMC,KAEb6B,QACE,CACEC,qBAAqB,EACrBC,YAAY,MAKhB,yBAAKL,UAAU,qBACf,kBAAC,IAAD,CAAMC,OAAQ,IACdrB,KACEsB,KAAK7B,MAAMC,KAEb6B,QACE,CACEC,qBAAqB,EACrBC,YAAY,W,GAxFGC,aCOVC,MATf,SAAuBnC,GACnB,OACI,kBAAC,IAAM2B,SAAP,KACQ,uBAAGC,UAAU,uBAAuBQ,MAAO,CAACZ,gBAAiB,UAAWxB,EAAMqC,WAC9E,uBAAGT,UAAW,0DAA2D5B,EAAMsC,SCwKhFC,MAxKf,WAA2B,IAAD,EACEC,mBAAS,CAAEC,UAAW,KADxB,mBACjBlC,EADiB,KACVmC,EADU,KAgBxB,OAbAC,qBAAU,WACRC,MAAM,yDACHvC,MAAK,SAACC,GAAD,OAAcA,EAASuC,UAC5BxC,MAAK,SAACC,IACoB,IAArBA,EAASwC,SACXJ,EAAS,CACPD,UAAWnC,EAASE,UAIzBuC,OAAM,kBAAMC,QAAQC,IAAI,gCAC1B,IAGD,kBAAC,IAAMtB,SAAP,KACE,yBAAKC,UAAU,kBACb,yBACEA,UAAU,uCACVsB,KAAK,QACLC,WAAS,UACTC,oBAAkB,QAElB,iDACA,4CAAkB7C,EAAMkC,UAAUY,mBAEpC,yBAAKzB,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,sCACb,yBACEA,UAAU,sCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,iDACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MAAO/B,EAAMkC,UAAUe,gBACvBnB,UAAU,gBAIhB,yBACET,UAAU,sCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,8CACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MAAO/B,EAAMkC,UAAUgB,kBACvBpB,UAAU,kBAIhB,yBACET,UAAU,sCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,0DACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MAAO/B,EAAMkC,UAAUiB,aACvBrB,UAAU,oBAKlB,yBAAKT,UAAU,mCACb,yBACEA,UAAU,+BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,wBAAII,UAAU,QAAd,iBACA,yBAAKA,UAAU,QACb,kBAAC+B,EAAD,SAIN,yBAAK/B,UAAU,sCACb,yBACEA,UAAU,sCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,6CACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MAAO/B,EAAMkC,UAAUmB,mBACvBvB,UAAU,aAIhB,yBACET,UAAU,sCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,6CACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MACE/B,EAAMkC,UACHoB,+CAELxB,UAAU,eAIhB,yBACET,UAAU,sCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,kDACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MAAO/B,EAAMkC,UAAUqB,gBACvBzB,UAAU,sBCZf0B,MApJf,WAA4B,IAAD,EACCvB,mBAAS,CAAEC,UAAW,KADvB,mBAClBlC,EADkB,KACXmC,EADW,KAczB,OAXAC,qBAAU,WACRC,MAAM,uEACHvC,MAAK,SAACC,GAAD,OAAcA,EAASuC,UAC5BxC,MAAK,SAACC,GACLoC,EAAS,CACPD,UAAWnC,EAASE,UAGvBuC,OAAM,kBAAMC,QAAQC,IAAI,gCAC1B,IAGD,kBAAC,IAAMtB,SAAP,KACE,yBAAKC,UAAU,kBACb,yBACEA,UAAU,uCACVsB,KAAK,QACLC,WAAS,UACTC,oBAAkB,QAElB,kDACA,4CAAkB7C,EAAMkC,UAAUuB,cAEpC,yBAAKpC,UAAU,mBACb,yBAAKA,UAAU,OACb,yBACEA,UAAU,kCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,mDACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MAAO/B,EAAMkC,UAAUwB,mBACvB5B,UAAU,gBAIhB,yBACET,UAAU,kCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,4DACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MAAO/B,EAAMkC,UAAUyB,YACvB7B,UAAU,mBAIhB,yBACET,UAAU,kCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,oDACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MAAO/B,EAAMkC,UAAU0B,eACvB9B,UAAU,sBAIhB,yBACET,UAAU,kCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,gDACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MAAO/B,EAAMkC,UAAU2B,iCACvB/B,UAAU,2BAIhB,yBACET,UAAU,kCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,6CACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MAAO/B,EAAMkC,UAAU4B,8BACvBhC,UAAU,iBAIhB,yBACET,UAAU,kCACVuB,WAAS,UACTC,oBAAkB,QAElB,yBACExB,UAAU,0BACVQ,MAAO,CAAEZ,gBAAiB,SAE1B,uBACE8B,MAAM,+CACNC,cAAY,SAEd,kBAAC,EAAD,CACEjB,MAAO/B,EAAMkC,UAAU6B,kCACvBjC,UAAU,0BChIbkC,MATf,WACI,OACI,kBAAC,IAAM5C,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QCuBG6C,E,kLAbXC,IAAIC,S,+BAIJ,OACE,kBAAC,IAAM/C,SAAP,KACE,kBAAC,EAAD,W,GARUO,aCJEyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlF,MAAK,SAAAmF,GACJA,EAAaC,gBAEd1C,OAAM,SAAA2C,GACL1C,QAAQ0C,MAAMA,EAAMC,a","file":"static/js/main.a9c0c83a.chunk.js","sourcesContent":["import React, { Component} from 'react'\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nclass Linecharts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Data: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios.get(`https://api.covid19api.com/live/country/sri-lanka/status/confirmed`)\r\n      .then(response => {\r\n        const stats = response.data;\r\n        let Confirmed = [];\r\n        let Active = [];\r\n        let Death = [];\r\n        let Recovered = [];\r\n        let Date = [];\r\n        stats.forEach(stat => {\r\n          Confirmed.push(stat.Confirmed);\r\n          Active.push(stat.Active);\r\n          Death.push(stat.Deaths);\r\n          Recovered.push(stat.Recovered);\r\n          Date.push(stat.Date.split(\"T\")[0]);\r\n        });\r\n        this.setState({\r\n          Data: {\r\n            labels: Date,\r\n            datasets: [\r\n              {\r\n                label: 'Confirmed',\r\n                data: Confirmed,\r\n              borderColor: '#ffc107',\r\n              backgroundColor: 'transparent',\r\n              spanGaps: true,\r\n              borderWidth: 2\r\n              },\r\n              {\r\n                label: 'Active',\r\n                data: Active,\r\n              borderColor: '#17a2b8',\r\n              backgroundColor: 'transparent',\r\n              spanGaps: true,\r\n              borderWidth: 2,\r\n              },\r\n              {\r\n                label: 'Death',\r\n                data: Death,\r\n              borderColor: '#dc3545',\r\n              backgroundColor: 'transparent',\r\n              spanGaps: true,\r\n              borderWidth: 2,\r\n              },\r\n              {\r\n                label: 'Recovered',\r\n                data: Recovered,\r\n              borderColor: '#28a745',\r\n              backgroundColor: 'transparent',\r\n              spanGaps: true,\r\n              borderWidth: 2,\r\n              }\r\n            ]\r\n          }\r\n        });\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      <div className=\"d-none d-md-block\">\r\n      <Line height={158}\r\n      data = {\r\n        this.state.Data\r\n      }\r\n      options = {\r\n        {\r\n          maintainAspectRatio: true,\r\n          responsive: true\r\n        }\r\n      }\r\n      />\r\n      </div>\r\n      <div className=\"d-block d-sm-none\">\r\n      <Line height={300}\r\n      data = {\r\n        this.state.Data\r\n      }\r\n      options = {\r\n        {\r\n          maintainAspectRatio: true,\r\n          responsive: true\r\n        }\r\n      }\r\n      />\r\n      </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Linecharts","import React from 'react'\r\n\r\nfunction DashBoardCard(props){\r\n    return(\r\n        <React.Fragment>\r\n                <p className=\"p-3 text-center fw-6\" style={{backgroundColor: \"white\"}}>{props.cardTitle}</p>\r\n                <p className={\"bg-transparent text-center align-middle fw-7 text-font\"}>{props.count}</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DashBoardCard","import React, { useState, useEffect } from \"react\";\r\nimport LocalLineChart from \"./LocalLineChart\";\r\n// import LocalBarChart from \"./LocalBarChart\";\r\n\r\nimport DashboardCard from \"../DashBoardCard\";\r\n\r\nfunction LocalDashboard() {\r\n  const [stats, setStats] = useState({ dashboard: {} });\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://hpb.health.gov.lk/api/get-current-statistical\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response.success === true) {\r\n          setStats({\r\n            dashboard: response.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(() => console.log(\"Something went wrong...\"));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container mt-3\">\r\n        <div\r\n          className=\"alert alert-success main-heading p-3\"\r\n          role=\"alert\"\r\n          data-aos=\"fade-up\"\r\n          data-aos-duration=\"1200\"\r\n        >\r\n          <h2>Local Information</h2>\r\n          <p>Last Updated: {stats.dashboard.update_date_time}</p>\r\n        </div>\r\n        <div className=\"container d-gap\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 col-sm-4 col-12 np m-auto\">\r\n              <div\r\n                className=\"col-md-12 col-sm-12 col-9 np m-auto\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1200\"\r\n              >\r\n                <div\r\n                  className=\"my-3 text-center shadow\"\r\n                  style={{ backgroundColor: \"#fff\" }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-hospital-o text-primary fa-card-position\"\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                  <DashboardCard\r\n                    count={stats.dashboard.local_new_cases}\r\n                    cardTitle=\"New Cases\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"col-md-12 col-sm-12 col-9 np m-auto\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1200\"\r\n              >\r\n                <div\r\n                  className=\"my-3 text-center shadow\"\r\n                  style={{ backgroundColor: \"#fff\" }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-user-md text-warning fa-card-position\"\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                  <DashboardCard\r\n                    count={stats.dashboard.local_total_cases}\r\n                    cardTitle=\"Total Cases\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"col-md-12 col-sm-12 col-9 np m-auto\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1200\"\r\n              >\r\n                <div\r\n                  className=\"my-3 text-center shadow\"\r\n                  style={{ backgroundColor: \"#fff\" }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-exclamation-triangle text-danger fa-card-position\"\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                  <DashboardCard\r\n                    count={stats.dashboard.local_deaths}\r\n                    cardTitle=\"Total Deaths\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-sm-6 col-12 m-auto\">\r\n              <div\r\n                className=\"my-3 py-3 text-center shadow\"\r\n                style={{ backgroundColor: \"#fff\" }}\r\n              >\r\n                <h2 className=\"py-2\">Local Summary</h2>\r\n                <div className=\"px-3\">\r\n                  <LocalLineChart />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3 col-sm-4 col-12 np m-auto\">\r\n              <div\r\n                className=\"col-md-12 col-sm-12 col-9 np m-auto\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1200\"\r\n              >\r\n                <div\r\n                  className=\"my-3 text-center shadow\"\r\n                  style={{ backgroundColor: \"#fff\" }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-ambulance text-info fa-card-position\"\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                  <DashboardCard\r\n                    count={stats.dashboard.local_active_cases}\r\n                    cardTitle=\"Active\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"col-md-12 col-sm-12 col-9 np m-auto\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1200\"\r\n              >\r\n                <div\r\n                  className=\"my-3 text-center shadow\"\r\n                  style={{ backgroundColor: \"#fff\" }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-medkit text-warning fa-card-position\"\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                  <DashboardCard\r\n                    count={\r\n                      stats.dashboard\r\n                        .local_total_number_of_individuals_in_hospitals\r\n                    }\r\n                    cardTitle=\"Admitted\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"col-md-12 col-sm-12 col-9 np m-auto\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1200\"\r\n              >\r\n                <div\r\n                  className=\"my-3 text-center shadow\"\r\n                  style={{ backgroundColor: \"#fff\" }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-plus-square text-success fa-card-position\"\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                  <DashboardCard\r\n                    count={stats.dashboard.local_recovered}\r\n                    cardTitle=\"Recovered\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default LocalDashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DashboardCard from \"../DashBoardCard\";\r\n\r\nfunction GlobalDashboard() {\r\n  const [stats, setStats] = useState({ dashboard: {} });\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://corona-virus-stats.herokuapp.com/api/v1/cases/general-stats\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setStats({\r\n          dashboard: response.data,\r\n        });\r\n      })\r\n      .catch(() => console.log(\"Something went wrong...\"));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container mt-3\">\r\n        <div\r\n          className=\"alert alert-success main-heading p-3\"\r\n          role=\"alert\"\r\n          data-aos=\"fade-up\"\r\n          data-aos-duration=\"1200\"\r\n        >\r\n          <h2>Global Information</h2>\r\n          <p>Last Updated: {stats.dashboard.last_update}</p>\r\n        </div>\r\n        <div className=\"container d-gap\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-md-4 col-sm-4 col-6 np-5 np\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1200\"\r\n            >\r\n              <div\r\n                className=\"my-3 text-center shadow\"\r\n                style={{ backgroundColor: \"#fff\" }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-hospital-o text-primary fa-card-position-1\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n                <DashboardCard\r\n                  count={stats.dashboard.currently_infected}\r\n                  cardTitle=\"New Cases\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"col-md-4 col-sm-4 col-6 np-5 np\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1200\"\r\n            >\r\n              <div\r\n                className=\"my-3 text-center shadow\"\r\n                style={{ backgroundColor: \"#fff\" }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-exclamation-triangle text-danger fa-card-position-1\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n                <DashboardCard\r\n                  count={stats.dashboard.death_cases}\r\n                  cardTitle=\"Total Deaths\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"col-md-4 col-sm-4 col-6 np-5 np\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1200\"\r\n            >\r\n              <div\r\n                className=\"my-3 text-center shadow\"\r\n                style={{ backgroundColor: \"#fff\" }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-plus-square text-success fa-card-position-1\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n                <DashboardCard\r\n                  count={stats.dashboard.recovery_cases}\r\n                  cardTitle=\"Total Recovered\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"col-md-4 col-sm-4 col-6 np-5 np\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1200\"\r\n            >\r\n              <div\r\n                className=\"my-3 text-center shadow\"\r\n                style={{ backgroundColor: \"#fff\" }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-user-md text-warning fa-card-position-1\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n                <DashboardCard\r\n                  count={stats.dashboard.active_cases_critical_percentage}\r\n                  cardTitle=\"Active Critical Rate\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"col-md-4 col-sm-4 col-6 np-5 np\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1200\"\r\n            >\r\n              <div\r\n                className=\"my-3 text-center shadow\"\r\n                style={{ backgroundColor: \"#fff\" }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-ambulance fa-card-position text-info\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n                <DashboardCard\r\n                  count={stats.dashboard.closed_cases_death_percentage}\r\n                  cardTitle=\"Death Rate\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"col-md-4 col-sm-4 col-6 np-5 np\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1200\"\r\n            >\r\n              <div\r\n                className=\"my-3 text-center shadow\"\r\n                style={{ backgroundColor: \"#fff\" }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-medkit text-warning fa-card-position-1\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n                <DashboardCard\r\n                  count={stats.dashboard.closed_cases_recovered_percentage}\r\n                  cardTitle=\"Recovered Rate\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default GlobalDashboard;\r\n","import React from 'react'\r\nimport LocalDashBoard from './Local/LocalDashboard'\r\nimport GlobalDashboard from './Global/GlobalDashboard'\r\n\r\nfunction MainDashboard(){\r\n    return(\r\n        <React.Fragment>\r\n            <LocalDashBoard />\r\n            <GlobalDashboard />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainDashboard","import React, { Component } from 'react';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport 'jquery'\n\n// Style\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\n\n// Components\nimport MainDashboard from './Dashboard/MainDashboard'\n\n\n\nclass App extends Component {\n  componentDidMount(){\n    AOS.init();\n  }\n  \n  render(){\n    return (\n      <React.Fragment>\n        <MainDashboard />\n      </React.Fragment>\n    );\n  }\n  }\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}